From bcf97df0cca7c71a0f13d372e780f83ed04b09e3 Mon Sep 17 00:00:00 2001
From: Tassilo Horn <tassilo@member.fsf.org>
Date: Fri, 17 Feb 2012 11:02:32 +0100
Subject: [PATCH] Fix CLJ-931: Syntactically broken clojure.test/are tests
 succeed.

Also added a testcase for my fix, but it is commented out because it fails when
run by "ant test".  However, if you fire up a REPL and run the test inside
that, it passes just fine.

Also fixed a test case in test/clojure/test_clojure/java_interop.clj only
because of the bug in clojure.test/are CLJ-931 is about.
---
 src/clj/clojure/test.clj                   |   10 +++++++++-
 test/clojure/test_clojure/java_interop.clj |   16 ++++++++--------
 test/clojure/test_clojure/test.clj         |   20 ++++++++++++++++++++
 3 files changed, 37 insertions(+), 9 deletions(-)

diff --git a/src/clj/clojure/test.clj b/src/clj/clojure/test.clj
index 2725e20..a393b4f 100644
--- a/src/clj/clojure/test.clj
+++ b/src/clj/clojure/test.clj
@@ -568,7 +568,15 @@
   Note: This breaks some reporting features, such as line numbers."
   {:added "1.1"}
   [argv expr & args]
-  `(temp/do-template ~argv (is ~expr) ~@args))
+  (if (or
+       ;; (are [] true) is meaningless but ok
+       (and (empty? argv) (empty? args))
+       ;; Catch wrong number of args
+       (and (pos? (count argv))
+            (pos? (count args))
+            (zero? (mod (count args) (count argv)))))
+    `(temp/do-template ~argv (is ~expr) ~@args)
+    (throw (IllegalArgumentException. "The number of args doesn't match are's argv."))))
 
 (defmacro testing
   "Adds a new string to the list of testing contexts.  May be nested,
diff --git a/test/clojure/test_clojure/java_interop.clj b/test/clojure/test_clojure/java_interop.clj
index 059ef11..7e73784 100644
--- a/test/clojure/test_clojure/java_interop.clj
+++ b/test/clojure/test_clojure/java_interop.clj
@@ -41,14 +41,14 @@
       (. Math (abs -7)) )
 
   ; (. target -prop)
-  (are [x y] (= x y)
-      (let [p (java.awt.Point. 1 2)]
-        1 (.-x p)
-        2 (.-y p)
-        1 (. p -x)
-        2 (. p -y)
-        1 (. (java.awt.Point. 1 2) -x)
-        2 (. (java.awt.Point. 1 2) -y)))
+  (let [p (java.awt.Point. 1 2)]
+    (are [x y] (= x y)
+       1 (.-x p)
+       2 (.-y p)
+       1 (. p -x)
+       2 (. p -y)
+       1 (. (java.awt.Point. 1 2) -x)
+       2 (. (java.awt.Point. 1 2) -y)))
   
   ; Classname/staticField
   (are [x] (= x 2147483647)
diff --git a/test/clojure/test_clojure/test.clj b/test/clojure/test_clojure/test.clj
index ae30b06..9278a2c 100644
--- a/test/clojure/test_clojure/test.clj
+++ b/test/clojure/test_clojure/test.clj
@@ -84,6 +84,26 @@
 #_(deftest can-test-unbound-function
   (is (does-not-exist) "Should error"))
 
+;; Test that are throws if too few/many values are given
+;;
+;; FIXME: This testcase works fine when executing it from a REPL.  However, it
+;; fails when being run by ant.  Why is that?
+#_(deftest are-throws-on-arity-mismatch
+    ;; No args at all
+    (is (thrown? IllegalArgumentException
+                 (macroexpand-1 '(are [a] (constantly true))))
+        "Should error")
+    ;; Too many
+    (is (thrown? IllegalArgumentException
+                 (macroexpand-1 '(are [a b] (constantly true)
+                                      1 2 3)))
+        "Should error")
+    ;; Too few
+    (is (thrown? IllegalArgumentException
+                 (macroexpand-1 '(are [a b c] (constantly true)
+                                      1 2)))
+        "Should error"))
+
 
 ;; Here, we create an alternate version of test/report, that
 ;; compares the event with the message, then calls the original
-- 
1.7.8.4

